name: NethCTI Middleware Release on tags

on:
  push:
    tags:
      - '**'

jobs:
  test-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v4'
        with:
          ref: ${{ github.ref }}
          persist-credentials: false
          
      - name: Verify tag format
        id: verify_tag
        run: |
          if [[ "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "Tag format is valid"
          else
            echo "Warning: Tag format doesn't follow semantic versioning (vX.Y.Z)"
          fi

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install oathtool
        run: |
          sudo apt-get update
          sudo apt-get install -y oathtool

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -cover ./...

      - name: Generate coverage report
        run: |
          go test -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html
      
      - name: Create Release
        run: gh release create ${{ github.ref }} --generate-notes
        env:
          GH_TOKEN: ${{ github.token }}
          
      - name: Generate SBOM (CycloneDX)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: cyclonedx
          output: sbom.cdx.json
          
      - name: Get tag name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_REF: ${{ github.ref }}
          
      - name: Attach files to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ steps.extract_tag.outputs.TAG_NAME }}" sbom.cdx.json --clobber || echo "Failed to upload SBOM, continuing workflow"
          gh release upload "${{ steps.extract_tag.outputs.TAG_NAME }}" coverage.out --clobber || echo "Failed to upload coverage data, continuing workflow"
          gh release upload "${{ steps.extract_tag.outputs.TAG_NAME }}" coverage.html --clobber || echo "Failed to upload coverage report, continuing workflow"