name: "Build and publish image"

on:
  workflow_dispatch:
  push:

permissions:
  packages: write

jobs:
  test:
    name: 'Run tests'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      - name: Install oathtool
        run: |
          sudo apt-get update
          sudo apt-get install -y oathtool
      - name: Download dependencies
        run: go mod download
      - name: Run tests
        run: go test -v -cover ./...
      - name: Generate coverage report
        run: |
          go test -coverprofile=coverage.out ./...
          go tool cover -html=coverage.out -o coverage.html
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.out
            coverage.html

  publish_images:
    name: 'Build and publish image'
    runs-on: ubuntu-latest
    needs: test
    env:
      REPOBASE: ghcr.io/${{ github.repository_owner }}
      IMAGETAG: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4
      - id: install-podman
        run: |
          # Install podman
          sudo apt update
          sudo apt-get -y install --install-recommends podman
      - id: build
        run: |
          # Build the module image
          REPOBASE=${REPOBASE,,}
          IMAGENAME=${REPOBASE}/nethcti-middleware
          IMAGETAG=${IMAGETAG:-latest}
          if [[ "${IMAGETAG}" == "main" || "${IMAGETAG}" == "master" ]]; then
             IMAGETAG="latest"
          fi
          echo "REPOBASE=$REPOBASE" >> $GITHUB_ENV
          echo "IMAGETAG=$IMAGETAG" >> $GITHUB_ENV
          echo "IMAGENAME=$IMAGENAME" >> $GITHUB_ENV
          podman build -t ${IMAGENAME}:${IMAGETAG} .
      - id: publish
        run: |
          # Publish the branch
          trap 'buildah logout ghcr.io' EXIT
          buildah login -u ${{ github.actor }} --password-stdin ghcr.io <<<"${{ secrets.GITHUB_TOKEN }}"
          buildah push ${IMAGENAME}:${IMAGETAG} docker://${IMAGENAME}:${IMAGETAG}
          echo "::notice title=Image URL::${IMAGENAME}:${IMAGETAG}"